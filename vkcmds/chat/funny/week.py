import time

import ranks
import vkcommands
import timetable
from vkcommands import VKCommand


class Week(VKCommand):
    def __init__(self, kristy):
        VKCommand.__init__(self, kristy,
                           label='–Ω–µ–¥–µ–ª—è',
                           desc='–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á—ë—Ç–Ω–æ—Å—Ç–∏ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–∏.')

    def execute(self, chat, peer, sender, args=None, attachments=None, fwd_messages=None):
        week = timetable.get_week(self.kristy.tt_data, chat)
        
        if week is None:
            self.kristy.send(peer, "‚ö† –£ –±–µ—Å–µ–¥—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è. –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É !—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
            
            if int(time.strftime("%W", time.gmtime(time.time() + 2 * 60 * 60))) % 2 == 0:
                week = '–Ω–∏–∂–Ω—è—è'
            else:
                week = '–≤–µ—Ä—Ö–Ω—è—è'
        
        emoji = '‚òù' if week == '–≤–µ—Ä—Ö–Ω—è—è' else 'üëá'
        self.kristy.send(peer, str("–°–µ–π—á–∞—Å %s %s %s –Ω–µ–¥–µ–ª—è" % (emoji, week, emoji)).upper())
  
