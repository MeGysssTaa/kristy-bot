import groupsmgr
import kristybot
import timetable

import pymongo
import requests
import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.upload import VkUpload


def exec_para(cmd, chat, sender):
    """
    !–ø–∞—Ä–∞
    """
    sender_groups = groupsmgr.get_groups(kristybot.chats, chat, sender)
    next_class = timetable.next_class(chat, sender_groups)

    if next_class is None:
        kristybot.vk.messages.send(chat_id=chat,
                                   message="üö´ –ù–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Å—ë. –ò–¥–∏ –ø–æ—Å–ø–∏, —á—Ç–æ –ª–∏.",
                                   random_id=int(vk_api.utils.get_random_id()))
    else:
        class_data = next_class[0]
        time_left = timetable.time_left(next_class[1])
        kristybot.vk.messages.send(chat_id=chat,
                                   message="üìö –°–ª–µ–¥—É—é—â–∞—è –ø–∞—Ä–∞: %s. –î–æ –Ω–∞—á–∞–ª–∞ %s." % (class_data, time_left),
                                   random_id=int(vk_api.utils.get_random_id()))

def exec_create():
    """
    !—Å–æ–∑–¥–∞—Ç—å
    """
    groups_off = []
    groups_on = []
    if not re.findall(r"(?<=\s)[a-zA-Z–∞-—è–ê-–Ø—ë–Å\d]+(?=\s|$)", event.object.message["text"]):
        vk.messages.send(chat_id=event.chat_id,
                         message="–í—ã –Ω–µ –≤–≤–µ–ª–∏ –≥—Ä—É–ø–ø—ã, –ª–∏–±–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö",
                         random_id=int(vk_api.utils.get_random_id()))
        continue
    groups_find = list(set(re.findall(r"(?<=\s)[a-zA-Z–∞-—è–ê-–Ø—ë–Å\d]+(?=\s|$)", event.object.message["text"])) - set(
        ["all", "–≤—Å–µ", "online", "–æ–Ω–ª–∞–π–Ω"]))
    groups_off = list(set(groups_find) - set(chats.distinct("groups.name", {"chat_id": event.chat_id})))
    groups_on = list(set(groups_find) - set(groups_off))
    groups_off.sort()
    groups_on.sort()

    name_vk = vk.users.get(user_id=event.object.message["from_id"])
    name = name_vk[0]["first_name"] + " " + name_vk[0]["last_name"]
    for group in groups_off:
        chats.update_one({"chat_id": event.chat_id}, {"$push": {
            "groups": {"name": group, "creator": event.object.message["from_id"], "members": [], "kicked": [],
                       "info": ""}}})
    if not groups_on and groups_off:
        test = vk.messages.send(chat_id=event.chat_id,
                                message=name + "\n–Ø –¥–æ–±–∞–≤–∏–ª–∞ –≤—Å–µ –Ω–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã:\n‚ûï " + '\n‚ûï '.join(
                                    groups_off), random_id=int(vk_api.utils.get_random_id()))
    else:
        if not groups_off:
            vk.messages.send(chat_id=event.chat_id,
                             message=name + "\n–í—Å–µ –≥—Ä—É–ø–ø—ã –∏ —Ç–∞–∫ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã:\n‚úî " + '\n‚úî '.join(groups_on),
                             random_id=int(vk_api.utils.get_random_id()))
        else:
            vk.messages.send(chat_id=event.chat_id,
                             message=name + "\n–Ø –¥–æ–±–∞–≤–∏–ª–∞ –≤—Å–µ –Ω–∏–∂–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã:\n‚ûï " + '\n‚ûï '.join(groups_off)
                                     + "\n–ù–æ —Ç–∞–∫–∂–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≥—Ä—É–ø–ø—ã —É–∂–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ä–∞–Ω–µ–µ:\n‚úî " + '\n‚úî '.join(
                                 groups_on), random_id=int(vk_api.utils.get_random_id()))
